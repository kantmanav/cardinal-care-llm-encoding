```prolog
covered(C) :-
    claim_service_type(C, ServiceType),
    member(ServiceType, [ivf_for_fertility_preservation, cryopreservation_for_fertility_preservation]),
    claim_location_service_received(C, Location),
    member(Location, [stanford_health_care, menlo_medical_clinic, sutter_health_palo_alto_medical_foundation, tier_two_in_network]),
    claim_patient_is_believed_to_be_fertile(C, yes),
    claim_planned_service(C, PlannedService),
    member(PlannedService, [chemotherapy, pelvic_radiotherapy, gonadotoxic_therapy, orchiectomy, oophorectomy, hysterectomy, other_treatment_demonstrated_to_result_in_infertility]),
    (   claim_will_be_retrieving_eggs_for_use(C, yes)
    ->  patient_age_at_time_of_service(C, Age),
        claim_date_service_received(C, ServiceDate),
        (   (   Age < 40,
                most_recent_day_3_fsh_test(C, fsh_test(Level, TestDate, _)),
                (   Age >= 39
                ->  leq_n_months_diff(TestDate, ServiceDate, 6)
                ;   true
                ),
                Level < 19
            )
        ;   (   Age >= 40,
                (   (   claim_patient_has_premature_ovarian_failure(C, yes),
                        most_recent_day_3_fsh_test(C, fsh_test(Level, TestDate, _)),
                        leq_n_months_diff(TestDate, ServiceDate, 6),
                        Level < 19
                    )
                ;   (   claim_patient_has_premature_ovarian_failure(C, no),
                        day_3_fsh_tests_since_age_40_in_claim(C, Tests),
                        forall(member(fsh_test(_, TD, _), Tests), leq_n_months_diff(TD, ServiceDate, 6)),
                        \+ exists_test_with_level_at_least_19(Tests)
                    )
                )
            )
        )
    ;   true
    ).
```

