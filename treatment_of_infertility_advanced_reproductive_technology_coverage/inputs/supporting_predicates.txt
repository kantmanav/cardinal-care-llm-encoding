Note: In Prolog, unification is the process of making two terms identical by finding a substitution for their variables that makes the terms equal. 

Predicate: patient_age_at_time_of_service(C, Age)
Arguments:
	• Age (integer): Unifies with the patient’s age at the time of service.
Description: Unifies Age with the patient’s age computed from the service date and date of birth.

Predicate: most_recent_day_3_fsh_test(C, fsh_test(Level, Date, Time))
Arguments:
	• fsh_test(Level, Date, Time) (compound): Unifies with the day‑3 FSH test record that has the latest date and time, where:
        • Level (integer): The hormone level measured in the test.
        • Date (atom): A date represented in the format ‘YYYY_MM_DD’.
        • Time (atom): A time represented in the format ‘HH_MM’.
Description: Unifies the second argument with the uniquely most recent day‑3 FSH test from the claim by comparing the test dates and times.

Predicate: day_3_fsh_tests_since_age_40_in_claim(C, Tests)
Arguments:
	• Tests (list): Unifies with a list of FSH test records whose dates are on or after the patient’s 40th birthday.
Description: Filters the claim’s FSH tests, unifying Tests with those performed on or after the patient reaches age 40.

Predicate: exists_test_with_level_at_least_19(Tests)
Arguments:
	• Tests (list): A list of day‑3 FSH test records.
Description: Succeeds if at least one test in Tests has a hormone level of 19 or greater.

Predicate: leq_n_months_diff(EarlierDate, LaterDate, N)
Arguments:
	• EarlierDate (atom): A date in the expected format representing the earlier date.
	• LaterDate (atom): A date representing the later date.
	• N (integer): The maximum allowed difference in months.
Description: Succeeds if the difference between LaterDate and EarlierDate is less than or equal to N months.