```prolog
covered(C) :-
    claim.service_type(C, Service),
    (Service = ivf_for_fertility_preservation ; Service = cryopreservation_for_fertility_preservation),
    claim.location_service_received(C, Location),
    member(Location,
        [stanford_health_care, menlo_medical_clinic, sutter_health_palo_alto_medical_foundation, tier_two_in_network]),
    claim.patient_is_believed_to_be_fertile(C, yes),
    claim.planned_service(C, PlannedService),
    member(PlannedService, [
        chemotherapy, pelvic_radiotherapy, gonadotoxic_therapy, orchiectomy, oophorectomy, hysterectomy,
        orchiectomy_for_treatment_of_disease, oophorectomy_for_treatment_of_disease,
        other_treatment_demonstrated_to_result_in_infertility]),
    claim.will_be_retrieving_eggs_for_use(C, yes).

covered(C) :-
    claim.service_type(C, ivf_for_fertility_preservation),
    claim.location_service_received(C, Location),
    member(Location,
        [stanford_health_care, menlo_medical_clinic, sutter_health_palo_alto_medical_foundation, tier_two_in_network]),
    claim.date_service_received(C, _),
    (claim.inseminations_not_expected_to_be_effective_and_ivf_expected_to_be_only_effective_treatment(C, yes);
        (claim.num_cycles_oral_or_injectable_ovulation_induction(C, NumCycles),
        ((claim.patient_has_premature_ovarian_failure(C, yes), NumCycles >= 3);
         (claim.patient_has_premature_ovarian_failure(C, no), claim.num_other_covered_art_services(C, Cycles), Cycles < 1)))).

```

