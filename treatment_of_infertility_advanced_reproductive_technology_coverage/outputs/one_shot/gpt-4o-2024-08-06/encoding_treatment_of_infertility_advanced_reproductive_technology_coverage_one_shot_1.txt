```prolog
covered(C) :- 
    claim.service_type(C, ivf_for_fertility_preservation),
    claim.location_service_received(C, Loc),
    Loc \= other,
    claim.patient_is_believed_to_be_fertile(C, yes),
    claim.planned_service(C, PlannedService),
    (
      member(PlannedService, [chemotherapy, pelvic_radiotherapy, gonadotoxic_therapy, orchiectomy, oophorectomy, hysterectomy, orchiectomy_for_treatment_of_disease, oophorectomy_for_treatment_of_disease, other_treatment_demonstrated_to_result_in_infertility])
    ),
    claim.will_be_retrieving_eggs_for_use(C, yes),
    claim.num_other_covered_art_services(C, NumCoveredART),
    NumCoveredART < 1.

covered(C) :- 
    claim.service_type(C, cryopreservation_for_fertility_preservation),
    claim.location_service_received(C, Loc),
    Loc \= other,
    claim.patient_is_believed_to_be_fertile(C, yes),
    claim.planned_service(C, PlannedService),
    (
      member(PlannedService, [chemotherapy, pelvic_radiotherapy, gonadotoxic_therapy, orchiectomy, oophorectomy, hysterectomy, orchiectomy_for_treatment_of_disease, oophorectomy_for_treatment_of_disease, other_treatment_demonstrated_to_result_in_infertility])
    ),
    claim.will_be_retrieving_eggs_for_use(C, yes),
    claim.num_other_covered_art_services(C, NumCoveredART),
    NumCoveredART < 1.

covered(C) :- 
    claim.inseminations_not_expected_to_be_effective_and_ivf_expected_to_be_only_effective_treatment(C, yes),
    claim.location_service_received(C, Loc),
    Loc \= other,
    claim.num_other_covered_art_services(C, NumCoveredART),
    NumCoveredART < 1.

covered(C) :- 
    claim.patient_has_premature_ovarian_failure(C, yes),
    claim.location_service_received(C, Loc),
    Loc \= other,
    claim.num_other_covered_art_services(C, NumCoveredART),
    NumCoveredART < 1.
```

