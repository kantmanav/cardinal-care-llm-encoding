```prolog
covered(C) :-
    (claim.service_type(C, ivf_for_fertility_preservation) ; claim.service_type(C, cryopreservation_for_fertility_preservation)),
    claim.location_service_received(C, Location),
    (Location = stanford_health_care ; Location = menlo_medical_clinic ; Location = sutter_health_palo_alto_medical_foundation ; Location = tier_two_in_network),
    claim.patient_is_believed_to_be_fertile(C, yes),
    claim.planned_service(C, PlannedService),
    (PlannedService = chemotherapy ; PlannedService = pelvic_radiotherapy ; PlannedService = gonadotoxic_therapy ; PlannedService = orchiectomy ; PlannedService = oophorectomy ; PlannedService = hysterectomy ; PlannedService = orchiectomy_for_treatment_of_disease ; PlannedService = oophorectomy_for_treatment_of_disease ; PlannedService = other_treatment_demonstrated_to_result_in_infertility),
    claim.will_be_retrieving_eggs_for_use(C, yes),
    claim.date_service_received(C, Date),
    (claim.patient_has_premature_ovarian_failure(C, yes) ->
        current_date(CurrentDate),
        subtract_years(CurrentDate, 40, ThresholdDate),
        Date @< ThresholdDate
    ;
        claim.patient_has_premature_ovarian_failure(C, no)
    ),
    claim.num_other_covered_art_services(C, NumServices),
    NumServices < 1,
    ((claim.service_type(C, ivf_for_fertility_preservation) ;
        (claim.inseminations_not_expected_to_be_effective_and_ivf_expected_to_be_only_effective_treatment(C, yes);
            (claim.num_cycles_oral_or_injectable_ovulation_induction(C, Cycles),
            (Cycles >= 3)))
    ).
```

